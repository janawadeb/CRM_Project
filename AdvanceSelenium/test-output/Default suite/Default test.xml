<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-OB9VH4BF" failures="0" tests="1" name="Default test" time="0.099" errors="0" timestamp="2025-03-28T19:25:16 IST">
  <testcase classname="genericBaseClassUtility.BaseClass" name="@BeforeSuite beforeSuite" time="0.017">
    <failure type="java.lang.Error" message="Unresolved compilation problem: 
	The method getDBConnection() in the type DatabaseUtility is not applicable for the arguments (String, String, String)
">
      <![CDATA[java.lang.Error: Unresolved compilation problem: 
The method getDBConnection() in the type DatabaseUtility is not applicable for the arguments (String, String, String)

at genericBaseClassUtility.BaseClass.beforeSuite(BaseClass.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:317)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="genericBaseClassUtility.BaseClass" name="@BeforeTest beforeTest" time="-1.743170115885E9">
    <skipped/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="genericBaseClassUtility.BaseClass" name="@BeforeClass beforeClass" time="-1.743170115919E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="genericBaseClassUtility.BaseClass" name="@BeforeMethod beforeMethod" time="-1.743170115951E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="genericBaseClassUtility.BaseClass" name="@AfterMethod afterMethod" time="-1.743170115967E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ProductTest.CreateProduct" name="createProductTest" time="0.0">
    <skipped/>
  </testcase> <!-- createProductTest -->
</testsuite> <!-- Default test -->
